(in-package :cl-jquants-api)

(defclass listed-issue-master (jquants-object)
  ((code :accessor code-of :initform nil)
   (date :accessor date-of :initform 0)
   (company-name :accessor company-name-of :initform nil)
   (company-name-english :accessor company-name-english-of :initform nil)
   (sector17-code :accessor sector17-code-of :initform nil)
   (sector17-code-name :accessor sector17-code-name-of :initform nil)
   (sector33-code :accessor sector33-code-of :initform nil)
   (sector33-code-name :accessor sector33-code-name-of :initform nil)
   (scale-category :accessor scale-category-of :initform nil)
   (market-code :accessor market-code-of :initform nil)
   (market-code-name :accessor market-code-name-of :initform nil)
   (margin-code :accessor margin-code-of :initform nil)
   (margin-code-name :accessor margin-code-name-of :initform nil)))

(defmethod complete-object-update :after ((obj listed-issue-master))
  (setf (sector17-code-of obj) (make-keyword (sector17-code-of obj)))
  (setf (sector33-code-of obj) (make-keyword (sector33-code-of obj)))
  (setf (market-code-of obj) (make-keyword (market-code-of obj)))
  (setf (margin-code-of obj) (parse-integer (margin-code-of obj)))
  (unless (eq *locale* :JP)
    (setf (company-name-of obj) (company-name-english-of obj))
    (when-let (sector17 (assoc (sector17-code-of obj) +sector17-code-and-name+))
      (setf (sector17-code-name-of obj) (cdr sector17)))
    (when-let (sector33 (assoc (sector33-code-of obj) +sector33-code-and-name+))
      (setf (sector33-code-name-of obj) (cdr sector33)))
    (when-let (segment (assoc (market-code-of obj) +market-segment-code-and-name+))
      (setf (market-code-name-of obj) (cdr segment)))
    (when-let (margin-code (assoc (margin-code-of obj) +margin-code+))
      (setf (margin-code-name-of obj) (cdr margin-code)))))
