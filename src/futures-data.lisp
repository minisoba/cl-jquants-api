(in-package :cl-jquants-api)

(defclass futures-data (jquants-object)
  ((code :accessor code-of :initform nil)
   (derivatives-product-category :accessor derivatives-product-category-of :initform nil)
   (date :accessor date-of :initform 0)
   (whole-day-open :accessor whole-day-open-of :initform 0.0)
   (whole-day-high :accessor whole-day-high-of :initform 0.0)
   (whole-day-low :accessor whole-day-low-of :initform 0.0)
   (whole-day-close :accessor whole-day-close-of :initform 0.0)
   (morning-session-open :accessor morning-session-open-of :initform 0.0)
   (morning-session-high :accessor morning-session-high-of :initform 0.0)
   (morning-session-low :accessor morning-session-low-of :initform 0.0)
   (morning-session-close :accessor morning-session-close-of :initform 0.0)
   (night-session-open :accessor night-session-open-of :initform 0.0)
   (night-session-high :accessor night-session-high-of :initform 0.0)
   (night-session-low :accessor night-session-low-of :initform 0.0)
   (night-session-close :accessor night-session-close-of :initform 0.0)
   (day-session-open :accessor day-session-open-of :initform 0.0)
   (day-session-high :accessor day-session-high-of :initform 0.0)
   (day-session-low :accessor day-session-low-of :initform 0.0)
   (day-session-close :accessor day-session-close-of :initform 0.0)
   (volume :accessor volume-of :initform 0.0)
   (open-interest :accessor open-interest-of :initform 0.0)
   (turnover-value :accessor turnover-value-of :initform 0.0)
   (contract-month :accessor contract-month-of :initform nil)
   (volume-only-auction :accessor volume-only-auction-of :initform 0.0)
   (emergency-margin-trigger-division :accessor emergency-margin-trigger-division-of :initform nil)
   (last-trading-day :accessor last-trading-day-of :initform nil)
   (special-quotation-day :accessor special-quotation-day-of :initform nil)
   (settlement-price :accessor settlement-price-of :initform 0.0)
   (central-contract-month-flag :accessor central-contract-month-flag-of :initform nil)))

(defmethod complete-object-update ((obj futures-data))
  (setf (central-contract-month-flag-of obj)
        (if (string= (central-contract-month-flag-of obj) "1")
            :central-contract-month
            :others)))
