(in-package :cl-jquants-api.test)

(defclass mock-http-handler (cl-jquants-api::http-handler)
  ())

(defun %get-json-file-path (filename)
  (merge-pathnames filename (asdf:system-relative-pathname "cl-jquants-api" "t/data/")))

(defun %mock-http-response-from-json (filename)
;  (when-let (json (read-file-into-string (%get-json-file-path filename) :external-format :utf-8))
  (when-let (json (read-file-into-string (%get-json-file-path filename)))
    (yason:parse json)))

(defmethod send-request ((obj mock-http-handler) endpoint method
                         &key (content nil) (stream *standard-output*) (timeout 20))
  (declare (ignore method content stream timeout))
  (flet ((string-match (text endpoint)
           (cl-ppcre:scan text endpoint)))
    (cond ((string-match "listed/info" endpoint)
           (%mock-http-response-from-json "ListedIssueInformation.json"))
          ((string-match "prices/daily_quotes" endpoint)
           (%mock-http-response-from-json "StockPrices.json"))
          ((string-match "prices/prices_am" endpoint)
           (%mock-http-response-from-json "MorningSessionStockPrices.json"))
          ((string-match "markets/trades_spec" endpoint)
           (%mock-http-response-from-json "TradingByTypeOfInvestors.json"))
          ((string-match "markets/weekly_margin_interest" endpoint)
           (%mock-http-response-from-json "MarginTradingOutstandings.json"))
          ((string-match "markets/short_selling" endpoint)
           (%mock-http-response-from-json "ShortSaleValueAndRatioBySector.json"))
          ((string-match "markets/breakdown" endpoint)
           (%mock-http-response-from-json "BreakdownTradingData.json"))
          ((string-match "markets/trading_calendar" endpoint)
           (%mock-http-response-from-json "TradingCalendar.json"))
          ((string-match "indices/topix" endpoint)
           (%mock-http-response-from-json "TopixPrices.json"))
          ((string-match "indices" endpoint)
           (%mock-http-response-from-json "IndicesPrices.json"))
          ((string-match "fins/statements" endpoint)
           (%mock-http-response-from-json "FinancialData.json"))
          ((string-match "fins/fs_details" endpoint)
           (%mock-http-response-from-json "FinancialStatementData.json"))
          ((string-match "fins/dividend" endpoint)
           (%mock-http-response-from-json "CashDividendData.json"))
          ((string-match "fins/announcement" endpoint)
           (%mock-http-response-from-json "EarningsCalendar.json"))
          ((string-match "option/index_option" endpoint)
           (%mock-http-response-from-json "IndexOptionPrices.json"))
          ((string-match "derivatives/futures" endpoint)
           (%mock-http-response-from-json "FuturesData.json"))
          ((string-match "derivatives/options" endpoint)
           (%mock-http-response-from-json "OptionsData.json")))))
